<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ASP.NET(C#) on Bob 學習筆記</title>
    <link>https://blog.poyi.tw/categories/asp.netc#/</link>
    <description>Recent content in ASP.NET(C#) on Bob 學習筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Mon, 22 Jul 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.poyi.tw/categories/asp.netc#/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[C#] String常用語法</title>
      <link>https://blog.poyi.tw/blog/2013/07/22/string-syntax/</link>
      <pubDate>Mon, 22 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.poyi.tw/blog/2013/07/22/string-syntax/</guid>
      <description>StringBuilder: 用append串接；大量動態字串時效率較高 String: 用+串接；固定字串時，效率較高
一般情況都用String String.IndexOf 找字串中第一次出現的index
if(employeeName.IndexOf(&amp;quot;Admin&amp;quot;) == -1)	// 可判斷Name中是否有符合Admin的字串  String.LastIndexOf 找字串中最後一次出現的index
Substring(int startIndex, int length) 擷取字串
string str = &amp;quot;台灣駐史瓦濟蘭大使館&amp;quot;; str.Substring(3, 6); // output: 史瓦濟蘭大使  Split 分隔字串
string wholeString = &amp;quot;Bob.Lu&amp;quot;; string[] spiltString = wholeString.Split(new string[] { &amp;quot;.&amp;quot; }, StringSplitOptions.RemoveEmptyEntries); aryUserInfo[0].ToString(); // output: Bob  Regex.IsMatch(string input, string pattern) 是否包含xxx
Regex.IsMatch(strPwd, &amp;quot;[0-9]&amp;quot;) // = Regex.IsMatch(strPwd, @&amp;quot;\d&amp;quot;) Regex.IsMatch(strPwd, @&amp;quot;[\W]&amp;quot;)  pattern表示法 : \d : [0-9] 數字 \D : 數字以外的字元 \w : [a-zA-Z0-9_] \W : \w以外的字元</description>
    </item>
    
  </channel>
</rss>