<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>csv on Bob 學習筆記</title>
    <link>https://blog.poyi.tw/tags/csv/</link>
    <description>Recent content in csv on Bob 學習筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Tue, 06 May 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.poyi.tw/tags/csv/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Ruby] 匯出批次csv檔</title>
      <link>https://blog.poyi.tw/blog/2014/05/06/ruby-csv-file/</link>
      <pubDate>Tue, 06 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.poyi.tw/blog/2014/05/06/ruby-csv-file/</guid>
      <description>讀取或寫入csv在ruby都蠻方便的，只是編碼或格式要稍微注意一下
匯出csv header = [&amp;#39;name&amp;#39;,&amp;#39;money&amp;#39;,&amp;#39;age&amp;#39;] body = [&amp;#39;ruby&amp;#39;,&amp;#39;1000&amp;#39;,&amp;#39;18&amp;#39;]# export_to_csv_string 匯出csv的string格式再利用send_data下載 head = &amp;#39;EF BB BF&amp;#39;.split(&amp;#39; &amp;#39;).map{|a|a.hex.chr}.join() # 加入BOM，解決excel中文亂碼 csv_string = CSV.generate(csv = head) do |csv| csv &amp;lt;&amp;lt; header csv &amp;lt;&amp;lt; body end # &amp;gt; csv_string.encoding 執行這句會發現預設編碼為ACSII csv_string.force_encoding(&amp;#39;big5&amp;#39;) # BOM也可以這樣加 csv_string = &amp;#34;\xEF\xBB\xBF#{csv_string}&amp;#34;  # 若不需要調整格式就直接下載 send_data csv_string# export_to_csv 直接匯出檔案 require &amp;#39;csv&amp;#39; CSV.open(&amp;#34;export.csv&amp;#34;,&amp;#34;w&amp;#34;) do |csv| csv &amp;lt;&amp;lt; header csv &amp;lt;&amp;lt; body end 半形轉全形 在某些情況會需要轉出全形字元，照理說不用才對，可能是因為合作對方的系統太爛 其實也不太確定怎解，我單純用硬幹的方式
# convert_to_wide_word 大小寫英文數字轉全形字元 def self.convert_to_wide_word(text) text.</description>
    </item>
    
  </channel>
</rss>