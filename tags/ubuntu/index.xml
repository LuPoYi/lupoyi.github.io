<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ubuntu on Bob 學習筆記</title>
    <link>https://blog.poyi.tw/tags/ubuntu/</link>
    <description>Recent content in ubuntu on Bob 學習筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Wed, 19 Oct 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.poyi.tw/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Ubuntu] Linux 稍微進階的常用指令</title>
      <link>https://blog.poyi.tw/my-linux-command/</link>
      <pubDate>Wed, 19 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.poyi.tw/my-linux-command/</guid>
      <description>稍微進階是對我來說啦 grep # 找該目錄底下所有出現&amp;#39;bob&amp;#39;的檔案 grep -r &amp;#39;bob&amp;#39; *# 找abc.txt內所有出現&amp;#39;bob&amp;#39;或&amp;#39;poyi&amp;#39;的內容 (| =&amp;gt; OR) grep -E &amp;#39;bob|poyi&amp;#39; abc.txt egrep &amp;#39;bob|poyi&amp;#39; abc.txt# 找abc.txt內所有出現&amp;#39;bob&amp;#39;及&amp;#39;poyi&amp;#39;的內容 (.* =&amp;gt; AND) grep -E &amp;#39;bob.*poyi|200.*poyi&amp;#39; abc.txt# 找abc.txt內沒有出現&amp;#39;bob&amp;#39;的內容 (NOT) grep -v &amp;#39;bob&amp;#39; abc.txt find 找檔案 # 在/home目錄下找檔名為production.log的檔案 find /home -name production.log find /home -iname production.log # 不分大小寫# 在/home目錄下找所有的log folder find /home -type d -name log locate 找檔案(查系統index，不是直接掃目錄) locate nginx.conf  Ctrl + c : 終止正在執行的程式 Ctrl + l : clear</description>
    </item>
    
    <item>
      <title>[Ubuntu] Linux 基本的安全設定</title>
      <link>https://blog.poyi.tw/linux-some-common-security-setting/</link>
      <pubDate>Thu, 25 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.poyi.tw/linux-some-common-security-setting/</guid>
      <description>列幾個基本款常見的一些設定 ssh port更換到別的port # ssh port更換到別的port $ sudo vim /etc/ssh/sshd_config Port 1968 $ sudo service sshd restart 開始自動安全性更新 $ sudo apt-get install unattended-upgrades $ sudo dpkg-reconfigure -plow unattended-upgrades $ sudo vim /etc/apt/apt.conf.d/50unattended-upgrades ssh 登入盡量用 key-exchange 方式 fail2ban - 自動ban掉多次嘗試登入者 $ sudo apt-get install fail2ban # 保留原始conf檔，把設定都寫在.local $ sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local $ vim /etc/fail2ban/jail.local # 將enabled改成true [DEFAULT] ignoreip = 127.0.0.1/8 bantime = 600 findtime = 600 maxretry = 5 backend = auto enabled = true # 啟動 $ sudo service fail2ban start # 看目前狀態，目前有一個被ban $ sudo fail2ban-client status Status |- Number of jail: 1 `- Jail list: sshd # detail $ sudo fail2ban-client status sshd Status for the jail: sshd |- Filter | |- Currently failed: 1 | |- Total failed: 6 | `- File list: /var/log/auth.</description>
    </item>
    
    <item>
      <title>[Ubuntu] 自行簽署的SSL憑證及Nginx設定</title>
      <link>https://blog.poyi.tw/ssl-certificate-nginx-ubuntu-config/</link>
      <pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.poyi.tw/ssl-certificate-nginx-ubuntu-config/</guid>
      <description>自簽SSL單純只是讓資料傳送時加密，避免使用明文傳輸資料而被直接監聽到封包
要上Production的話還是必須找SSL服務來簽
# openssl # 我習慣在nginx把ssl裝在opt/nginx底下 mkdir /opt/nginx/ssl sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /opt/nginx/ssl/nginx.key -out /opt/nginx/ssl/nginx.crt # 填寫基本資料 # Common Name 填 Domain Name 或 IP # 建立金鑰nginx.key及憑證nginx.crt# nginx.conf server { listen 80 default_server; # 將所有HTTP requests轉至HTTPS return 301 https://$host$request_uri; } server { listen 443 ssl default_server; ssl_certificate /opt/nginx/ssl/nginx.crt; ssl_certificate_key /opt/nginx/ssl/nginx.key; # 其他ssl參數設定 ... server_name default_server; root /home/path/rails/public; # &amp;lt;--- rails路徑 rails_env production; passenger_enabled on; }# 產dhparam -out sudo openssl dhparam -out /opt/nginx/ssl/dhparam.</description>
    </item>
    
    <item>
      <title>[Mac] 三步驟純指令建立Ubuntu的USB隨身碟</title>
      <link>https://blog.poyi.tw/mac-build-ubuntu-flash-using-command/</link>
      <pubDate>Mon, 29 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.poyi.tw/mac-build-ubuntu-flash-using-command/</guid>
      <description># 將載好的ubuntu.iso 轉成 ubuntu.dmg Bob:Downloads $ hdiutil convert -format UDRW -o ubuntu-14.04.2-server-amd64.dmg ubuntu-14.04.2-server-amd64.iso 正在讀取Driver Descriptor Map（DDM：0）⋯ 正在讀取Ubuntu-Server 14.04.2 LTS amd64 （Apple_ISO：1）⋯ 正在讀取Apple（Apple_partition_map：2）⋯ 正在讀取Ubuntu-Server 14.04.2 LTS amd64 （Apple_ISO：3）⋯ .............. 正在讀取EFI（Apple_HFS：4）⋯ ............... 正在讀取Ubuntu-Server 14.04.2 LTS amd64 （Apple_ISO：5）⋯ .............................................................................. 經過時間： 7.977s 速度：74.6Mbyte/秒 節省：0.0%# 找到你的usb隨身碟後卸載它 Bob:Downloads $ diskutil list /dev/disk0 ... /dev/disk1 ... /dev/disk2 #: TYPE NAME SIZE IDENTIFIER 0: FDisk_partition_scheme *8.1 GB disk2 1: Windows_FAT_32 ADATA UFD 8.1 GB disk2s1 Bob:Downloads $ diskutil unmountDisk /dev/disk2 Unmount of all volumes on disk2 was successful# dd 把資料寫入隨身碟 Bob:Downloads $ sudo dd if=ubuntu-14.</description>
    </item>
    
  </channel>
</rss>